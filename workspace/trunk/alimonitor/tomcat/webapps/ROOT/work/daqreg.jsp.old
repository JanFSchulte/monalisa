<%@ page import="lia.Monitor.Store.Fast.DB,lazyj.*,lazyj.commands.*,alien.catalogue.AliEnFile,java.util.Date,alien.pool.AliEnPool"%><%!
    final String CASTOR_SE_PREFIX = "root://voalice16.cern.ch/";
    
    final String CASTOR_SE = "ALICE::CERN::CASTOR2";
    
    final String PATH_PREFIX = "/alice/data";
%><%
    if (!request.getRemoteAddr().equals("137.138.116.73") && !request.getRemoteAddr().equals("128.141.144.178") &&
	!request.getRemoteAddr().equals("137.138.116.74")
    ){
	lia.web.servlets.web.Utils.logRequest("/work/daqreg.jsp?DENIED", 0, request);
	out.println("err:access denied");
	return;
    }

    lia.web.servlets.web.Utils.logRequest("START /work/daqreg.jsp", 0, request);
    
    response.setContentType("text/plain");
    
    final RequestWrapper rw = new RequestWrapper(request);

    final long lSize = rw.getl("size");
    final String surl = rw.gets("surl");
    final long ctime = rw.getl("ctime");
    final String run = rw.gets("run");
    final String partition = rw.gets("meta:accPeriod");
    final String md5 = rw.gets("md5");
    final String guid = rw.gets("guid");
    
    // sanity check
    
    if (lSize <= 0 || surl.length() == 0 || ctime <= 0 || run.length() <= 0 || partition.length() <= 0 || md5.length() <= 0){
	out.println("err:wrong parameters");
	return;
    }
    
    final int year = new Date().getYear() + 1900;
    
    final String sDir = PATH_PREFIX+"/"+year+"/"+partition+"/"+run+"/raw";

    final AliEnFile fDir = new AliEnFile(sDir);
    
    if (!fDir.exists()){
	if (!fDir.mkdir()){
	    System.err.println("daqreg.jsp : cannot create directory : "+sDir);
	    out.println("err:cannot create directory");
	    return;
	}
    }

    // make sure the catalogue is ok

    final String sFile = sDir+surl.substring(surl.lastIndexOf('/'));

    final AliEnFile f = new AliEnFile(sFile);
    
    if (f.exists()){
	out.println("ok:file was already registered");
    }
    else{
	final String sCommand = "register "+sFile+" "+CASTOR_SE_PREFIX+surl+" "+lSize+" "+CASTOR_SE+" "+guid+" -md5 "+md5;
    
	final CommandOutput co = AliEnPool.executeCommand("alidaq", sCommand, true);
	
	if (co!=null){
	    if (co.stdout.indexOf(" inserted in the catalog")>=0){
		out.println("ok:file registered successfully");
	    }
	    else{
		f.refresh();
		
		if (f.exists()){
		    out.println("ok:file was concurrently inserted by somebody else");
		}
		else{
		    out.println("err:could not register the file");
		    System.err.println("daqreg.jsp : could not register the file because : "+co);
		    out.println(co);
		}
	    }
	}
	else{
	    System.err.println("daqreg.jsp : null output trying to execute : "+sCommand);
	}
    }
    
    if (sFile.endsWith(".0.tag.")){
	out.println("repository:will not insert this file");
	return;
    }
    
    // then update the repository database accordingly
    final DB db = new DB();
    
    if (!db.query("SELECT 123 FROM rawdata WHERE lfn='"+Format.escSQL(sFile)+"';")){
	out.println("repository:cannot query database");
	return;
    }
    
    int code = 0;
    
    if (db.geti(1) == 123){
	final String q = "UPDATE rawdata SET size="+lSize+", pfn='"+Format.escSQL(surl)+"', addtime="+ctime+" WHERE lfn='"+Format.escSQL(sFile)+"' AND (size IS NULL OR size!="+lSize+" OR pfn IS NULL OR pfn!='"+Format.escSQL(surl)+"' OR addtime IS NULL OR addtime!="+ctime+");";
	
	//System.err.println(q);
	
	if (db.syncUpdateQuery(q)){
	    if (db.getUpdateCount()==0){
		out.println("repository:file existed with all details");
		code = 1;
	    }
	    else{
		out.println("repository:file existed but was updated");
		code = 2;
	    }
	}
	else{
	    out.println("repository:cannot update the existing file");
	    code = 3;
	}
    }
    else{
	if (db.syncUpdateQuery("INSERT INTO rawdata (lfn, addtime, size, pfn) VALUES ('"+Format.escSQL(sFile)+"', "+ctime+", "+lSize+", '"+Format.escSQL(surl)+"');")){
	    if (db.getUpdateCount()==0){
		out.println("repository:cannot insert new file");
		code = 4;
	    }
	    else{
		out.println("repository:new file successfully inserted");
		code = 5;
	    }
	}
	else{
	    out.println("repository:cannot insert new file");
	    code = 6;
	}
    }
    
    lia.web.servlets.web.Utils.logRequest("/work/daqreg.jsp?lfn="+sFile+"&pfn="+surl+"&size="+lSize, code, request);
%>